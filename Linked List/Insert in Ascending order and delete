#include<bits/stdc++.h>
using namespace std;

struct Node{
    int data;
    struct Node* link;
};
struct Node* head;

void print(){
    struct Node* temp=head;
    while(temp!=NULL){
        cout<<temp->data<<" ";
        temp=temp->link;
    }
}

void insertAsAscending(int val){
    struct Node* temp= (struct Node*) malloc (sizeof(struct Node));
    struct Node* temp1=head;
    temp->data=val;
    temp->link=NULL;
    if(head==NULL || temp->data<head->data){
        temp->link=head;
        head=temp;
    }
    else {
        struct Node* temp2=temp1->link;
        if(temp2==NULL){
            temp1->link=temp;
        }
        while(temp2!=NULL && temp->data>temp2->data){
            temp1=temp2;
            temp2=temp2->link;
        }
        temp1->link=temp;
        temp->link=temp2;
    }
}

void deleteNode(int position){
    struct Node* temp=head;
    if(position==1){
        head=temp->link;
        free(temp);
    }
    else {
        for(int i=1;i<=position-2;i++){
            temp=temp->link;
        }
        struct Node* temp2=temp->link;
        temp->link=temp2->link;
        free(temp2);
    }
}

int main(){
    head=NULL;
    insertAsAscending(7);
    insertAsAscending(10);
    insertAsAscending(2);
    insertAsAscending(1);
    insertAsAscending(8);
    //1 2 7 8 10
    print();
    insertAsAscending(5);
    insertAsAscending(15);
    //1 2 5 7 8 10 15
    cout<<endl;
    print();
    cout<<endl;

    deleteNode(1);
    //2 5 7 8 10 15
    print();
    cout<<endl;

    deleteNode(4);
    //2 5 7 10 15
    print();

    return 0;
}

//Use temp->link = temp2->link; when you need to update the link field of a node.
//Use temp = temp2->link; when you want to move the pointer to another node.
