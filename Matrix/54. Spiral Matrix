class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        int m=matrix.size(); //row
        int n=matrix[0].size(); //col
        int rowbegin=0,rowend=m-1;
        int colbegin=0,colend=n-1;
        vector<int>result;
        while(rowbegin<=rowend && colbegin<=colend){
            //move right
            for(int i=colbegin;i<=colend;i++){
                result.push_back(matrix[rowbegin][i]);
            }
            rowbegin++;

            //move down
            for(int i=rowbegin;i<=rowend;i++){
                result.push_back(matrix[i][colend]); //colend
            }
            colend--;

            //move left
            if(rowbegin<=rowend){
                for(int i=colend;i>=colbegin;i--){
                    result.push_back(matrix[rowend][i]);
                }
            rowend--;
            }
            
            //move upward
            if(colbegin<=colend){
                for(int i=rowend;i>=rowbegin;i--){
                    result.push_back(matrix[i][colbegin]);
                }
            colbegin++;
            }
            
        }
        return result;
    }
};
