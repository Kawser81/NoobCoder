class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int n=nums.size();
        int left=0;
        int right=n-1;
        int ans=0;
        while(left<=right){
            int mid=left+(right-left)/2;

            if(nums[mid]==target){
                return mid;
            }
            else if(nums[mid]<target){
                left=mid+1;
            }
            else {
                right=mid-1;
            }
        }
        return left;
    }
};

//nums = [1,3,5,6], target = 2
//Initial: left = 0, right = 3
//1st iteration: mid = (0 + 3) / 2 = 1, nums[1] = 3 > target, so right = mid - 1 = 0
//2nd iteration: mid = (0 + 0) / 2 = 0, nums[0] = 1 < target, so left = mid + 1 = 1
